//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  372 Size:     4
//   float MaxTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_ScaleAlpha_FloatCurve;// Offset:  380 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ScaleAlpha_FloatCurve;// Offset:  384 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   12 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   16 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   24 Size:     4
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   28 Size:     4
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   64 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   float Constants_Emitter_CalculateSizeByMass_ManuallyEnteredDensityASC40kgASC47mASC943ASC41;// Offset:   96 Size:     4 [unused]
//   float Constants_Emitter_CalculateSizeByMass_MassModulation;// Offset:  100 Size:     4
//   float4 Constants_Emitter_CalculateSizeByMass_SpriteSizeModulation;// Offset:  112 Size:    16
//   float Constants_Emitter_CalculateSizeByMass_Width;// Offset:  128 Size:     4
//   float Constants_Emitter_CalculateSizeByMass_Height;// Offset:  132 Size:     4
//   float Constants_Emitter_CalculateSizeByMass_Depth;// Offset:  136 Size:     4
//   float4 Constants_Emitter_CalculateSizeByMass_ModelProportions;// Offset:  144 Size:    16 [unused]
//   float4 Constants_Emitter_CalculateSizeByMass_InitialModelDimensions;// Offset:  160 Size:    16 [unused]
//   float4 Constants_Emitter_UniformRangedVector_Minimum;// Offset:  176 Size:    16
//   float4 Constants_Emitter_UniformRangedVector_Maximum;// Offset:  192 Size:    16
//   int Constants_Emitter_UniformRangedVector_RandomSeed;// Offset:  208 Size:     4 [unused]
//   float4 Constants_Emitter_AddVelocity_ScaleAddedVelocity;// Offset:  224 Size:    16
//   int Constants_Emitter_SphereLocation_RandomSeed;// Offset:  240 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:  244 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SphereRadius;// Offset:  248 Size:     4
//   float4 Constants_Emitter_SphereLocation_NonUniformScale;// Offset:  256 Size:    16
//   float4 Constants_Emitter_SphereLocation_Offset;// Offset:  272 Size:    16
//   int Constants_Emitter_SphereLocation_SpawnGroupMask;// Offset:  288 Size:     4 [unused]
//   float4 Constants_Emitter_GravityForce_Gravity;// Offset:  304 Size:    16
//   float Constants_Emitter_Drag_Drag; // Offset:  320 Size:     4
//   float Constants_Emitter_Drag_RotationalDrag;// Offset:  324 Size:     4 [unused]
//   float Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  328 Size:     4
//   float4 Constants_Emitter_ScaleColor_ScaleRGB;// Offset:  336 Size:    16
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  352 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  356 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  360 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Emitter_ScaleAlpha_FloatCurve    texture   float         buf             t2      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB4[22], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 14
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r1.zzzz, t0.yzxw
  ishl r1.x, cb0[21].y, l(3)
  iadd r1.x, r0.x, r1.x
  ld_indexable(buffer)(float,float,float,float) r2.w, r1.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.wwww, t0.xyzw
  imad r3.xyzw, l(10, 11, 13, 14), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.y, r3.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r1.z, r3.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r3.wwww, t0.yxzw
  imad r4.xyzw, l(15, 19, 20, 21), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r4.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r3.w, r4.zzzz, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.wwww, t0.xyzw
  imad r5.xyzw, l(22, 23, 24, 25), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.y, r5.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r4.z, r5.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r5.x, r5.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.y, r5.wwww, t0.yxzw
  ld_indexable(buffer)(sint,sint,sint,sint) r4.w, r0.xxxx, t1.yzwx
  imad r6.xyz, l(26, 27, 28, 0), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r7.x, r6.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r7.y, r6.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r7.z, r6.zzzz, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r5.z, r1.x, l(0.000010)
  add r5.w, r5.z, l(-0.000100)
  lt r5.w, r0.w, r5.w
  div r5.z, r0.w, r5.z
  mul r6.xyz, r1.yyyy, cb4[19].xyzx
  add r6.w, r5.z, -cb0[23].y
  mul_sat r6.w, r6.w, cb0[23].w
  mul r7.w, r6.w, cb0[24].x
  round_ni r7.w, r7.w
  lt r8.x, r7.w, cb0[24].x
  add r8.y, r7.w, l(1.000000)
  movc r8.x, r8.x, r8.y, r7.w
  mad r6.w, r6.w, cb0[24].x, -r7.w
  ftou r7.w, r7.w
  ld_indexable(buffer)(float,float,float,float) r7.w, r7.wwww, t2.yzwx
  ftou r8.x, r8.x
  ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t2.xyzw
  add r8.x, -r7.w, r8.x
  mad r6.w, r6.w, r8.x, r7.w
  mul r8.w, r6.w, cb4[20].z
  mov r8.xyz, cb4[21].xyzx
  mul r8.xyzw, r8.xyzw, r2.xyzw
  max r6.w, r1.y, l(0.000100)
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  mul r6.xyz, r6.xyzx, r6.wwww
  mad r6.xyz, r6.xyzx, cb1[0].xxxx, r7.xyzx
  max r6.w, cb4[20].x, l(0.000000)
  mad r6.w, cb1[0].x, r6.w, l(1.000000)
  div r6.xyz, r6.xyzx, r6.wwww
  mad r3.xyz, r6.xyzx, cb1[0].xxxx, r3.xyzx
  mov r6.w, r6.x
  mov r7.xy, r6.yzyy
else 
  uge r7.z, r0.x, r0.y
  and r0.z, r0.z, r7.z
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r9.xyzw, r0.xxxx, cb0[10].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r9.y, r9.x
    iadd r0.y, r9.z, r0.y
    iadd r0.y, r9.w, r0.y
    ige r9.xyzw, r0.xxxx, cb0[11].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r9.y, r9.x
    iadd r0.z, r9.z, r0.z
    iadd r0.z, r9.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r4.w, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r9.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r0.xyz, r0.xxxx, r9.xyzx, cb5[25].xyzx
    add r7.z, -cb4[0].x, cb4[0].y
    imul null, r9.x, vThreadID.x, l(0x0019660d)
    imul null, r9.y, cb0[9].z, l(0x0019660d)
    iadd r9.xy, r9.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r10.xyzw, r9.xxxx, r9.xxxx, l(0x3c3c2745, 0x3c22c138, 0x3c095b2b, 0x3beff51e)
    imad r11.xyzw, r9.yyyy, r10.xyzw, r9.xxxx
    imad r12.xyzw, r10.xyzw, r11.xyzw, r9.yyyy
    imad r12.xyzw, r11.xyzw, r12.xyzw, r9.xxxx
    imad r10.xyzw, r11.xyzw, r12.xyzw, r10.xyzw
    ishr r10.xyzw, r10.xyzw, l(8, 8, 8, 8)
    and r10.xyzw, r10.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r10.xyzw, r10.xyzw
    mul r7.z, r7.z, r10.x
    mad r7.z, r7.z, l(0.000000), cb4[0].x
    add r7.w, -cb4[0].w, cb4[1].x
    mul r7.w, r7.w, r10.y
    mad r1.x, r7.w, l(0.000000), cb4[0].w
    add r7.w, -cb4[1].z, cb4[1].w
    mul r7.w, r7.w, r10.z
    mad r1.y, r7.w, l(0.000000), cb4[1].z
    mul r4.z, r7.z, l(360.000000)
    mul r1.z, r10.w, l(0.000000)
    mul r7.z, cb4[6].y, l(997.000000)
    add r7.w, cb4[8].y, cb4[8].x
    add r7.w, r7.w, cb4[8].z
    div r7.w, l(3.000000), r7.w
    mul r9.zw, r7.wwww, cb4[8].xxxy
    mul r9.zw, r9.zzzw, cb4[7].xxxy
    div r7.z, r1.y, r7.z
    mul r7.zw, r7.zzzz, l(0.000000, 0.000000, 1000000.000000, 0.127324)
    log r7.zw, r7.zzzw
    mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.333333, 0.333333)
    exp r7.zw, r7.zzzw
    mul r5.xy, r7.zzzz, r9.zwzz
    mul r7.z, r1.y, l(0.400000)
    mul r7.w, r7.w, r7.w
    mul r1.w, r7.w, r7.z
    add r10.xyz, -cb4[11].xyzx, cb4[12].xyzx
    imad r11.xyzw, r9.xxxx, r9.xxxx, l(0x3bd68f11, 0x3bbd2904, 0x3ba3c2f7, 0x3b8a5cea)
    imad r12.xyzw, r9.yyyy, r11.xyzw, r9.xxxx
    imad r13.xyzw, r11.xyzw, r12.xyzw, r9.yyyy
    imad r13.xyzw, r12.xyzw, r13.xyzw, r9.xxxx
    imad r11.xyzw, r12.xyzw, r13.xyzw, r11.xyzw
    ishr r11.xyzw, r11.xyzw, l(8, 8, 8, 8)
    and r11.xyzw, r11.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r11.xyzw, r11.xyzw
    mul r10.xyz, r10.xyzx, r11.xyzx
    mad r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[11].xyzx
    mul r10.xyz, r10.xyzx, cb4[14].xyzx
    mul r11.xyz, r10.yyyy, cb2[17].xyzx
    mad r10.xyw, r10.xxxx, cb2[16].xyxz, r11.xyxz
    mad r10.xyz, r10.zzzz, cb2[18].xyzx, r10.xywx
    mul r11.x, r11.w, l(0.000000)
    imad r7.zw, r9.xxxx, r9.xxxx, l(0, 0, 0x3b70f6dd, 0x3b5790d0)
    imad r9.zw, r9.yyyy, r7.zzzw, r9.xxxx
    imad r12.xy, r7.zwzz, r9.zwzz, r9.yyyy
    imad r9.xy, r9.zwzz, r12.xyxx, r9.xxxx
    imad r7.zw, r9.zzzw, r9.xxxy, r7.zzzw
    ishr r7.zw, r7.zzzw, l(0, 0, 8, 8)
    and r7.zw, r7.zzzw, l(0, 0, 0x00ffffff, 0x00ffffff)
    utof r7.zw, r7.zzzw
    mul r11.yz, r7.zzwz, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r9.xyz, r11.xyzx, l(0.000000, -1.000000, 0.000000, 0.000000)
    sincos r9.x, r11.x, r9.x
    mad r7.z, -r9.y, r9.y, l(1.000000)
    sqrt r7.z, r7.z
    mul r11.x, r7.z, r11.x
    mul r11.y, r7.z, r9.x
    log r7.z, r9.z
    mul r7.z, r7.z, l(0.333333)
    exp r7.z, r7.z
    mov r11.z, r9.y
    mul r9.xyz, r7.zzzz, r11.xyzx
    mul r9.xyz, r9.xyzx, cb4[15].zzzz
    mul r9.xyz, r9.xyzx, cb4[16].xyzx
    add r0.xyz, r0.xyzx, cb4[17].xyzx
    mul r11.xyz, r9.yyyy, cb2[1].xyzx
    mad r9.xyw, r9.xxxx, cb2[0].xyxz, r11.xyxz
    mad r9.xyz, r9.zzzz, cb2[2].xyzx, r9.xywx
    add r0.xyz, r0.xyzx, r9.xyzx
    max r7.z, r1.x, l(0.000010)
    add r7.w, r7.z, l(-0.000100)
    lt r5.w, r0.w, r7.w
    div r5.z, r0.w, r7.z
    mul r9.xyz, r1.yyyy, cb4[19].xyzx
    add r7.z, r5.z, -cb0[23].y
    mul_sat r7.z, r7.z, cb0[23].w
    mul r7.w, r7.z, cb0[24].x
    round_ni r7.w, r7.w
    lt r9.w, r7.w, cb0[24].x
    add r10.w, r7.w, l(1.000000)
    movc r9.w, r9.w, r10.w, r7.w
    mad r7.z, r7.z, cb0[24].x, -r7.w
    ftou r7.w, r7.w
    ld_indexable(buffer)(float,float,float,float) r7.w, r7.wwww, t2.yzwx
    ftou r9.w, r9.w
    ld_indexable(buffer)(float,float,float,float) r9.w, r9.wwww, t2.yzwx
    add r9.w, -r7.w, r9.w
    mad r7.z, r7.z, r9.w, r7.w
    mul r11.w, r7.z, cb4[20].z
    mov r11.xyz, cb4[21].xyzx
    mul r8.xyzw, r11.xyzw, cb4[3].xyzw
    max r7.z, r1.y, l(0.000100)
    div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
    mul r9.xyz, r9.xyzx, r7.zzzz
    mad r9.xyz, r9.xyzx, r0.wwww, r10.xyzx
    max r7.z, cb4[20].x, l(0.000000)
    mad r7.z, r0.w, r7.z, l(1.000000)
    div r6.xyz, r9.xyzx, r7.zzzz
    mad r3.xyz, r6.xyzx, r0.wwww, r0.xyzx
    mov r2.xyzw, cb4[3].xyzw
    mov r6.w, r6.x
    mov r7.xy, r6.yzyy
    mov r3.w, l(1.000000)
    mov r4.xy, l(1.000000,1.000000,0,0)
  else 
    mov r0.w, l(0)
    mov r8.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r7.xy, l(0,0,0,0)
    mov r1.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r5.xyzw, l(0,0,0,0)
  endif 
endif 
and r0.x, r5.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r9.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r9.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r7.z, r9.y, l(0), g0.xxxx
  iadd r7.z, r0.y, r7.z
  ld_structured r7.w, r9.z, l(0), g0.xxxx
  iadd r7.w, r7.w, r7.z
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r9.x, l(0), r0.x
  store_structured g0.x, r9.y, l(0), r0.y
  store_structured g0.x, r9.z, l(0), r7.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r7.w
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r9.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r9.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r7.z, r9.y, l(0), g1.xxxx
  iadd r7.z, r0.z, r7.z
  ld_structured r7.w, r9.z, l(0), g1.xxxx
  iadd r7.w, r7.w, r7.z
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r9.x, l(0), r0.y
  store_structured g1.x, r9.y, l(0), r0.z
  store_structured g1.x, r9.z, l(0), r7.z
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r7.w
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r9.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r9.x
endif 
sync_g_t
if_nz r5.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r8.xxxx
  ishl r9.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r9.xyzw, r0.xxxx, r9.xyzw
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r8.yyyy
  imad r10.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r8.zzzz
  store_uav_typed u1.xyzw, r9.yyyy, r8.wwww
  store_uav_typed u1.xyzw, r10.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r10.zzzz, r2.yyyy
  store_uav_typed u1.xyzw, r10.wwww, r2.zzzz
  store_uav_typed u1.xyzw, r9.zzzz, r2.wwww
  imad r2.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r1.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r1.yyyy
  store_uav_typed u1.xyzw, r2.zzzz, r1.zzzz
  store_uav_typed u1.xyzw, r2.wwww, r5.zzzz
  imad r2.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r3.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r3.yyyy
  store_uav_typed u1.xyzw, r2.zzzz, r3.zzzz
  store_uav_typed u1.xyzw, r9.wwww, r6.wwww
  store_uav_typed u1.xyzw, r2.wwww, r7.xxxx
  imad r2.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r7.yyyy
  store_uav_typed u1.xyzw, r2.yyyy, r1.wwww
  store_uav_typed u1.xyzw, r2.zzzz, r3.wwww
  store_uav_typed u1.xyzw, r2.wwww, r4.xxxx
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r4.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r5.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r5.yyyy
  store_uav_typed u0.xyzw, r0.yyyy, r4.wwww
  imad r0.xyz, l(26, 27, 28, 0), cb0[21].zzzz, r0.xxxx
  iadd r0.xyz, r0.xyzx, cb0[20].yyyy
  store_uav_typed u1.xyzw, r0.xxxx, r6.xxxx
  store_uav_typed u1.xyzw, r0.yyyy, r6.yyyy
  store_uav_typed u1.xyzw, r0.zzzz, r6.zzzz
endif 
ret 
// Approximately 329 instruction slots used
